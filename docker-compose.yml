services:
  # PostgreSQL Database Service
  postgres-container:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 4747
      POSTGRES_DB: patient-service
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - springboot-network

  # MongoDB Database Service
  mongo-container:
    image: mongo:latest
    environment:
      MONGO_INITDB_DATABASE: docnotes-service  # Initialize an empty database
    ports:
      - "27017:27017"
    networks:
      - springboot-network
    volumes:
      - mongo_data:/data/db
  
  # Spring Boot Application Service (Patient)
  springboot-patient-app:
    build:
      context: ./patient  # Directory containing Spring Boot project Dockerfile
    container_name: spring_boot_app_patients
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-container:5432/patient-service
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 4747
    ports:
      - "8081:8081"
    depends_on:
      - postgres-container
    networks:
      - springboot-network

  # Spring Boot Application Service (Docnotes)
  springboot-docnotes-app:
    build:
      context: ./docnotes  # Use the Dockerfile in the current directory
    container_name: spring_boot_app_docnotes
    ports:
      - "8082:8082"  # Expose Spring Boot application on port 8082
    depends_on:
      - mongo-container  # Wait for MongoDB to start before the app starts
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongo-container:27017/docnotes-service  # Adjust to use the empty database
    networks:
      - springboot-network

  # Spring Boot Application Service (assessment)
  springboot-assessment-app:
    build:
      context: ./assessments  # Use the Dockerfile in the current directory
    container_name: spring_boot_app_assessment
    ports:
      - "8080:8080"  # Expose Spring Boot application on port 8082
    depends_on:
      - springboot-patient-app
      - springboot-docnotes-app
    networks:
      - springboot-network


  # Frontend Service (Nginx)
  frontend:
    build:
      context: ./frontend  # Directory containing frontend Dockerfile and nginx.conf
    ports:
      - "80:80"
    depends_on:
      - springboot-patient-app
      - springboot-docnotes-app
    networks:
      - springboot-network
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/static:/usr/share/nginx/html

# Define the network
networks:
  springboot-network:

# Define the volumes
volumes:
  postgres_data:
  mongo_data:
  shared-volume: